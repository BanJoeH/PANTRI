{"version":3,"sources":["components/oddbits/oddbits.component.jsx","components/sort-shopping/sort-shopping.component.jsx","pages/shopping-list/shopping-list.component.js","pages/shopping-list/shopping-list.utils.js"],"names":["OddBits","oddBits","useSelector","state","firebase","profile","uid","auth","firestore","useFirestore","useState","ingredient","ingredientRef","inputList","setInputList","useEffect","length","map","item","updateOddBits","ingredients","input","collection","doc","set","merge","className","lossOfFocus","label","SortShopping","recipes","showSort","setShowSort","id","name","link","sortShoppingRecipe","setSortShoppingRecipe","togleShowSort","removeIngredient","event","ingredientToRemove","target","split","temp","filter","sortAllIngredients","ingredientListSorted","recipe","flat","sort","Set","value","str","removeFromRecipes","button","ingredientButton","e","preventDefault","style","margin","onClick","formattedIngredients","ShoppingList","isLoading","status","requesting","shoppingList","history","useHistory","useFirestoreConnect","storeAs","ordered","shoppingListCollectionRef","handleRemoveFromShoppingClick","a","recipeId","recipeToRemove","findRecipe","removeFromFirebaseCollection","response","notification","title","cardButton","ingredientIndex","updatedIngredients","slice","splice","ref","update","removeIngredientFromShoppingList","push","cursor"],"mappings":"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","file":"static/js/8.d4c0b3a1.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport IngredientInput from \"../ingredient-input/ingredient-input.component.js\";\r\nimport { useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst OddBits = () => {\r\n  const oddBits = useSelector((state) => state.firebase.profile.oddBits);\r\n  const { uid } = useSelector((state) => state.firebase.auth);\r\n\r\n  const firestore = useFirestore();\r\n\r\n  const [inputList, setInputList] = useState([\r\n    { ingredient: \"\", ingredientRef: null },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (oddBits?.length) {\r\n      setInputList(\r\n        oddBits.map((item) => ({\r\n          ingredient: item,\r\n          ingredientRef: null,\r\n        }))\r\n      );\r\n    }\r\n  }, [oddBits]);\r\n\r\n  const handleOnBlur = () => {\r\n    updateOddBits(inputList, uid);\r\n  };\r\n\r\n  const updateOddBits = (inputList, uid) => {\r\n    let ingredients = inputList.map((input) => {\r\n      return input.ingredient;\r\n    });\r\n    firestore.collection(\"users\").doc(uid).set(\r\n      {\r\n        oddBits: ingredients,\r\n      },\r\n      { merge: true }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <article className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h2 className=\"card-title\">Odd Bits</h2>\r\n      </div>\r\n      <div className=\"card-body \">\r\n        <IngredientInput\r\n          inputList={inputList}\r\n          setInputList={setInputList}\r\n          lossOfFocus={handleOnBlur}\r\n          label=\"Odd bit\"\r\n        />\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default OddBits;\r\n","import React, { useState } from \"react\";\r\nimport Card from \"../card/card.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nconst SortShopping = ({ recipes }) => {\r\n  const [showSort, setShowSort] = useState(false);\r\n  const [sortShoppingRecipe, setSortShoppingRecipe] = useState({\r\n    id: \"sort\",\r\n    name: \"Sorted Shopping List\",\r\n    link: \"\",\r\n    ingredients: [],\r\n  });\r\n\r\n  const togleShowSort = () => {\r\n    setShowSort(!showSort);\r\n  };\r\n\r\n  const handleRemoveIngredientClick = (e) => {\r\n    e.preventDefault();\r\n    const ingredients = sortShoppingRecipe.ingredients;\r\n    removeIngredient(e, ingredients);\r\n  };\r\n\r\n  const removeIngredient = (event, ingredients) => {\r\n    const ingredientToRemove = event.target.name.split(\"&\")[1];\r\n\r\n    const temp = ingredients.filter(\r\n      (ingredient) => ingredient !== ingredientToRemove\r\n    );\r\n    setSortShoppingRecipe({ ...sortShoppingRecipe, ingredients: temp });\r\n  };\r\n\r\n  const handleSortClick = (e) => {\r\n    e.preventDefault();\r\n    const formattedIngredients = sortAllIngredients(recipes);\r\n    setSortShoppingRecipe((state) => {\r\n      return {\r\n        ...state,\r\n        ingredients: formattedIngredients,\r\n      };\r\n    });\r\n    togleShowSort();\r\n  };\r\n\r\n  const sortAllIngredients = (recipes) => {\r\n    const ingredientListSorted = recipes\r\n      .map((recipe) => {\r\n        return recipe.ingredients;\r\n      })\r\n      .flat()\r\n      .sort();\r\n    const unique = [...new Set(ingredientListSorted)];\r\n    const duplicates = unique.map((value) => [\r\n      value,\r\n      ingredientListSorted.filter((str) => str === value).length,\r\n    ]);\r\n    const formatted = duplicates.map(\r\n      (ingredient) => ingredient[0] + \"  X\" + ingredient[1]\r\n    );\r\n\r\n    return formatted;\r\n  };\r\n\r\n  return showSort ? (\r\n    <Card\r\n      recipe={sortShoppingRecipe}\r\n      removeFromRecipes={togleShowSort}\r\n      button={togleShowSort}\r\n      ingredientButton={handleRemoveIngredientClick}\r\n    />\r\n  ) : (\r\n    <div style={{ margin: \"0 5%\" }}>\r\n      <CustomButton value=\"Sort shopping\" onClick={handleSortClick}>\r\n        Sort Shopping\r\n      </CustomButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortShopping;\r\n","import React from \"react\";\r\n\r\nimport { useFirestoreConnect, useFirestore } from \"react-redux-firebase\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { removeIngredientFromShoppingList } from \"./shopping-list.utils\";\r\n\r\nimport OddBits from \"../../components/oddbits/oddbits.component.jsx\";\r\nimport CardList from \"../../components/cardList/card-list.component.jsx\";\r\nimport SortShopping from \"../../components/sort-shopping/sort-shopping.component.jsx\";\r\nimport {\r\n  findRecipe,\r\n  removeFromFirebaseCollection,\r\n  notification,\r\n} from \"../../App/app.utils\";\r\nimport PageContainer from \"../../components/page-container/page-container\";\r\nimport PageHeaderContainer from \"../../components/page-header-container/page-header-container\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst ShoppingList = () => {\r\n  const { uid } = useSelector((state) => state.firebase.auth);\r\n  const isLoading = useSelector(\r\n    (state) => state.firestore.status.requesting.shoppingList\r\n  );\r\n  const history = useHistory();\r\n\r\n  useFirestoreConnect({\r\n    collection: `users/${uid}/shoppingList`,\r\n    storeAs: \"shoppingList\",\r\n  });\r\n\r\n  const firestore = useFirestore();\r\n  const recipes = useSelector((state) => state.firestore.ordered.shoppingList);\r\n\r\n  const shoppingListCollectionRef = firestore\r\n    .collection(\"users\")\r\n    .doc(uid)\r\n    .collection(\"shoppingList\");\r\n\r\n  const handleRemoveFromShoppingClick = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const recipeId = e.target.value;\r\n    const recipeToRemove = findRecipe(recipeId, recipes);\r\n    const response = await removeFromFirebaseCollection(\r\n      recipeToRemove,\r\n      shoppingListCollectionRef\r\n    );\r\n    if (response === \"error\") {\r\n      notification(\r\n        \"Error\",\r\n        \"Error removing recipe, please try again\",\r\n        \"danger\"\r\n      );\r\n    } else {\r\n      notification(response.name, \"Deleted\", \"success\");\r\n    }\r\n  };\r\n\r\n  const handleRemoveIngredientFromShoppingListItemClick = (e) => {\r\n    e.preventDefault();\r\n    const [recipeId, , ingredientIndex] = e.target.name.split(\"&\");\r\n    const recipe = findRecipe(recipeId, recipes);\r\n    const updatedIngredients = recipe.ingredients.slice();\r\n    updatedIngredients.splice(ingredientIndex, 1);\r\n\r\n    removeIngredientFromShoppingList(\r\n      recipeId,\r\n      updatedIngredients,\r\n      shoppingListCollectionRef\r\n    );\r\n  };\r\n\r\n  return (\r\n    !isLoading && (\r\n      <PageContainer>\r\n        <PageHeaderContainer title=\"Shopping List\">\r\n          <OddBits />\r\n          {recipes?.length ? <SortShopping recipes={recipes} /> : null}\r\n        </PageHeaderContainer>\r\n        {recipes?.length ? (\r\n          <CardList\r\n            recipes={recipes}\r\n            removeFromRecipes={handleRemoveFromShoppingClick}\r\n            cardButton={handleRemoveFromShoppingClick}\r\n            ingredientButton={handleRemoveIngredientFromShoppingListItemClick}\r\n          />\r\n        ) : (\r\n          <div\r\n            className=\"card\"\r\n            onClick={() => {\r\n              history.push(\"/PANTRI/recipes\");\r\n            }}\r\n            style={{ cursor: \"pointer\" }}\r\n          >\r\n            <h2>No recipes in your shopping list.</h2>\r\n            <h2>Go to Recipes to add some!</h2>\r\n          </div>\r\n        )}\r\n      </PageContainer>\r\n    )\r\n  );\r\n};\r\n\r\nexport default ShoppingList;\r\n","export const removeRecipeFromShoppingList = (recipeId, ref) => {\r\n  ref\r\n    .doc(recipeId)\r\n    .delete()\r\n    .catch((error) => {\r\n      console.log(\"error removing document\", error);\r\n    });\r\n};\r\n\r\nexport const removeIngredientFromShoppingList = (\r\n  recipeId,\r\n  updatedIngredients,\r\n  ref\r\n) => {\r\n  ref.doc(recipeId).update(\r\n    {\r\n      ingredients: updatedIngredients,\r\n    },\r\n    { merge: true }\r\n  );\r\n};\r\n"],"sourceRoot":""}