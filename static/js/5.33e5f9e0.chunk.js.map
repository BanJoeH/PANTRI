{"version":3,"sources":["components/custom-button/custom-button.component.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/custom-input/custom-input.component.jsx","components/ingredient-input/ingredient-input.component.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","pages/new-recipe/new-recipe.component.js"],"names":["CustomButton","props","onClick","isGoogleSignIn","value","children","className","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","CustomInput","handleChange","label","otherProps","onChange","IngredientInput","inputList","setInputList","lossOfFocus","handleAddClick","ingredient","ingredientRef","useEffect","focus","map","x","id","name","e","index","list","handleInputChange","onKeyDown","ref","autoComplete","onBlur","htmlFor","splice","handleRemoveClick","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","NewRecipe","useState","link","ingredients","newRecipe","setNewRecipe","error","setError","showNewRecipeCard","setShowNewRecipeCard","firestore","useFirestore","uid","useSelector","state","firebase","auth","event","input","toLowerCase","filter","Boolean","required","preventDefault","collection","doc","add","then","docRef","update","notification"],"mappings":"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","file":"static/js/5.33e5f9e0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./custom-button.styles.scss\";\r\n\r\nconst CustomButton = (props) => {\r\n  const { onClick, isGoogleSignIn, value, children } = props;\r\n  return (\r\n    <button\r\n      className={`${isGoogleSignIn ? \"google-sign-in\" : \"\"} custom-button`}\r\n      onClick={onClick}\r\n      value={value}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\nexport default CustomButton;\r\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\";\r\n\r\nimport \"./custom-input-styles.scss\";\r\n\r\nconst CustomInput = (props) => {\r\n  const { handleChange, label, ...otherProps } = props;\r\n  return (\r\n    <div className=\"group\">\r\n      <input onChange={handleChange} {...otherProps} className=\"form-input\" />\r\n      {label ? (\r\n        <label\r\n          className={`${\r\n            otherProps.value.length ? \"shrink\" : \"\"\r\n          } form-input-label`}\r\n        >\r\n          {label}\r\n        </label>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n","import { useEffect } from \"react\";\r\n\r\nimport \"./ingredient-input.stytles.scss\";\r\n\r\nconst IngredientInput = ({\r\n  inputList,\r\n  setInputList,\r\n  lossOfFocus,\r\n  label = \"Ingredient\",\r\n}) => {\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { ingredient: \"\", ingredientRef: null }]);\r\n  };\r\n\r\n  const addIngredientOnEnter = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleAddClick();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inputList[inputList.length - 1].ingredientRef) {\r\n      inputList[inputList.length - 1].ingredientRef.focus();\r\n    }\r\n  }, [inputList.length]);\r\n\r\n  return inputList.map((x, i) => {\r\n    return (\r\n      <div key={i} className=\"ingredient-input-group\">\r\n        <div className=\"group\">\r\n          <input\r\n            id={x.ingredient + i}\r\n            name=\"ingredient\"\r\n            label={label ? label : `Ingredient`}\r\n            onChange={(e) => handleInputChange(e, i)}\r\n            value={x.ingredient}\r\n            onKeyDown={(e) => addIngredientOnEnter(e)}\r\n            ref={(e) => (x.ingredientRef = e)}\r\n            autoComplete=\"off\"\r\n            className=\"form-input\"\r\n            onBlur={lossOfFocus}\r\n          />\r\n          {label ? (\r\n            <label\r\n              htmlFor={x.ingredient + i}\r\n              className={`${\r\n                x.ingredient.length ? \"shrink\" : \"\"\r\n              } form-input-label`}\r\n            >\r\n              {label}\r\n            </label>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className=\"button-group\">\r\n          {inputList.length - 1 === i && (\r\n            <div className=\"ingredient-button\">\r\n              <button onClick={handleAddClick} className=\"add\">\r\n                &#10005;\r\n              </button>\r\n            </div>\r\n          )}\r\n          {inputList.length !== 1 && (\r\n            <button\r\n              onClick={() => handleRemoveClick(i)}\r\n              className=\"ingredient-button delete\"\r\n            >\r\n              &#10005;\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n};\r\nexport default IngredientInput;\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect } from \"react\";\r\nimport { useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { notification } from \"../../App/app.utils\";\r\nimport CustomButton from \"../../components/custom-button/custom-button.component.jsx\";\r\nimport IngredientInput from \"../../components/ingredient-input/ingredient-input.component.js\";\r\nimport CustomInput from \"../../components/custom-input/custom-input.component\";\r\n\r\n// const ID = () => {\r\n//   return Math.random().toString(36).substr(2, 9);\r\n// };\r\n\r\nfunction NewRecipe() {\r\n  const [inputList, setInputList] = useState([\r\n    { ingredient: \"\", ingredientRef: null },\r\n  ]);\r\n  const [newRecipe, setNewRecipe] = useState({\r\n    name: \"\",\r\n    link: \"\",\r\n    ingredients: [],\r\n  });\r\n  const [error, setError] = useState(false);\r\n  const [showNewRecipeCard, setShowNewRecipeCard] = useState(false);\r\n\r\n  const firestore = useFirestore();\r\n  const { uid } = useSelector((state) => state.firebase.auth);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setNewRecipe({ ...newRecipe, [name]: value });\r\n  };\r\n\r\n  const addNewRecipe = (event) => {\r\n    event.preventDefault();\r\n    if (!newRecipe.name) {\r\n      setError(true);\r\n    } else {\r\n      firestore\r\n        .collection(\"users\")\r\n        .doc(uid)\r\n        .collection(\"recipes\")\r\n        .add(newRecipe)\r\n        .then((docRef) => {\r\n          docRef.update({\r\n            id: docRef.id,\r\n          });\r\n        });\r\n      notification(newRecipe.name, \"Added to Recipes\", \"success\");\r\n      setNewRecipe({ name: \"\", link: \"\", ingredients: [] });\r\n      setInputList([{ ingredient: \"\", ingredientRef: null }]);\r\n      setError(false);\r\n      setShowNewRecipeCard(!showNewRecipeCard);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let ingredients = inputList\r\n      .map((input, i) => {\r\n        return input.ingredient.toLowerCase();\r\n      })\r\n      .filter(Boolean);\r\n    setNewRecipe({ ...newRecipe, ingredients: ingredients });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [inputList]);\r\n\r\n  return !showNewRecipeCard ? (\r\n    <CustomButton\r\n      value=\"newRecipe\"\r\n      onClick={() => {\r\n        setShowNewRecipeCard(!showNewRecipeCard);\r\n      }}\r\n    >\r\n      Add a Recipe\r\n    </CustomButton>\r\n  ) : (\r\n    <div className=\"card\">\r\n      <h3 className=\"new-recipe-title\">Add a new recipe</h3>\r\n      <CustomInput\r\n        name=\"name\"\r\n        label=\"Recipe Name\"\r\n        handleChange={handleChange}\r\n        value={newRecipe.name}\r\n        required\r\n      />\r\n      {error ? <div className=\"error\">Recipe name Required</div> : null}\r\n      <CustomInput\r\n        name=\"link\"\r\n        label=\"Link\"\r\n        handleChange={handleChange}\r\n        value={newRecipe.link}\r\n      />\r\n      <IngredientInput\r\n        inputList={inputList}\r\n        setInputList={setInputList}\r\n        label=\"Ingredient\"\r\n      />\r\n      <div className=\"new-recipe-button-group\">\r\n        <CustomButton value=\"AddRecipe\" onClick={addNewRecipe}>\r\n          Add Recipe\r\n        </CustomButton>\r\n        <CustomButton\r\n          value=\"Cancel\"\r\n          onClick={() => {\r\n            setShowNewRecipeCard(false);\r\n            setError(false);\r\n          }}\r\n        >\r\n          Cancel\r\n        </CustomButton>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewRecipe;\r\n"],"sourceRoot":""}