{"version":3,"sources":["components/footer/footer.jsx","pages/home/shopping-listSlice.js","components/ingredient-input/ingredient-input.component.js","components/oddbits/oddbits.component.jsx","components/custom-button/custom-button.component.jsx","components/ingredient-list/ingredient-list.component.jsx","components/card/card.component.jsx","components/cardList/card-list.component.jsx","pages/home/home.component.js","App/app.utils.js","pages/recipes/recipesSlice.js","components/custom-input/custom-input.component.jsx","components/search-box/searchbox.component.js","pages/recipes/recipes.component.js","pages/new-recipe/new-recipe.component.js","App.js","App/store.js","serviceWorker.js","index.js"],"names":["Footer","className","initialState","JSON","parse","localStorage","getItem","shoppingListSlice","createSlice","name","reducers","shoppingListAdded","reducer","shoppingList","action","unshift","payload","prepare","recipe","id","Math","random","toString","substr","shoppingListRemoved","filter","shoppingIngredientRemoved","split","recipeId","ingredientToRemove","index","tempShoppingList","map","shoppingRecipe","tempIngredientList","ingredients","ingredient","i","actions","IngredientInput","inputList","setInputList","label","handleAddClick","ingredientRef","useEffect","length","focus","x","onChange","e","target","value","list","handleInputChange","onKeyDown","key","ref","autoComplete","htmlFor","onClick","splice","handleRemoveClick","OddBits","setOddBits","oddBits","useState","item","input","CustomButton","props","children","IngredientList","pathname","ingredientButton","Card","button","removeFromRecipes","editRecipe","window","location","link","rel","href","CardList","recipes","cardButton","editRecipeCardButton","breakpointColumnsObj","default","1400","1000","breakpointCols","columnClassName","Home","useSelector","state","dispatch","useDispatch","setItem","stringify","recipeNames","removeRecipeFromShoppingList","event","preventDefault","find","includes","ingredientList","flat","sort","formatted","Set","str","notification","title","msg","store","addNotification","message","type","insert","container","dismiss","duration","recipeSlice","recipeAdded","push","recipeRemoved","recipeEdited","CustomInput","handleChange","otherProps","SearchBox","searchField","searchChange","Recipes","editingRecipe","setEditingRecipe","setSearchField","inputEditChangeHandler","prevState","filteredRecipes","toLowerCase","Boolean","defaultState","console","log","confirm","recipeToEdit","ID","NewRecipe","newRecipe","setNewRecipe","App","to","path","configureStore","recipesReducer","shoppingListReducer","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5725bb0b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./footer.styles.scss\";\r\n\r\nexport function Footer() {\r\n  return <div className=\"footer\">Made by Joe</div>;\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst ID = () => {\r\n  return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nconst initialState = JSON.parse(localStorage.getItem(\"storedShopping\")) || [];\r\n\r\nconst shoppingListSlice = createSlice({\r\n  name: \"shoppingList\",\r\n  initialState,\r\n  reducers: {\r\n    shoppingListAdded: {\r\n      reducer(shoppingList, action) {\r\n        shoppingList.unshift(action.payload);\r\n      },\r\n      prepare(recipe) {\r\n        return {\r\n          payload: {\r\n            ...recipe,\r\n            id: ID(),\r\n          },\r\n        };\r\n      },\r\n    },\r\n    shoppingListRemoved: (shoppingList, action) => {\r\n      return shoppingList.filter((recipe) => recipe.id !== action.payload);\r\n    },\r\n    shoppingIngredientRemoved: (shoppingList, action) => {\r\n      let [recipeId, ingredientToRemove, index] = action.payload.split(\" \");\r\n\r\n      let tempShoppingList = shoppingList.map((shoppingRecipe) => {\r\n        if (shoppingRecipe.id === recipeId) {\r\n          let tempIngredientList = shoppingRecipe.ingredients.filter(\r\n            (ingredient, i) => ingredient + i !== ingredientToRemove + index\r\n          );\r\n          shoppingRecipe.ingredients = tempIngredientList;\r\n          return shoppingRecipe;\r\n        } else {\r\n          return shoppingRecipe;\r\n        }\r\n      });\r\n      shoppingList = tempShoppingList;\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = shoppingListSlice;\r\n\r\nexport const {\r\n  shoppingListAdded,\r\n  shoppingListRemoved,\r\n  shoppingIngredientRemoved,\r\n} = actions;\r\n\r\nexport default reducer;\r\n","import { useEffect } from \"react\";\r\n\r\nimport \"./ingredient-input.stytles.scss\";\r\n\r\nconst IngredientInput = ({ inputList, setInputList, label }) => {\r\n  const handleInputChange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...inputList];\r\n    list[index][name] = value;\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleRemoveClick = (index) => {\r\n    const list = [...inputList];\r\n    list.splice(index, 1);\r\n    setInputList(list);\r\n  };\r\n\r\n  const handleAddClick = () => {\r\n    setInputList([...inputList, { ingredient: \"\", ingredientRef: null }]);\r\n  };\r\n\r\n  const addIngredientOnEnter = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      handleAddClick();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (inputList[inputList.length - 1].ingredientRef) {\r\n      inputList[inputList.length - 1].ingredientRef.focus();\r\n    }\r\n  }, [inputList.length]);\r\n\r\n  return inputList.map((x, i) => {\r\n    return (\r\n      <div key={i} className=\"ingredient-input-group\">\r\n        <div className=\"group\">\r\n          <input\r\n            id={x.ingredient + i}\r\n            name=\"ingredient\"\r\n            label={label ? label : `Ingredient`}\r\n            onChange={(e) => handleInputChange(e, i)}\r\n            value={x.ingredient}\r\n            onKeyDown={(e) => addIngredientOnEnter(e)}\r\n            ref={(e) => (x.ingredientRef = e)}\r\n            autoComplete=\"off\"\r\n            className=\"form-input\"\r\n          />\r\n          {label ? (\r\n            <label\r\n              htmlFor={x.ingredient + i}\r\n              className={`${\r\n                x.ingredient.length ? \"shrink\" : \"\"\r\n              } form-input-label`}\r\n            >\r\n              {label}\r\n            </label>\r\n          ) : null}\r\n        </div>\r\n\r\n        <div className=\"button-group\">\r\n          {inputList.length - 1 === i && (\r\n            <div className=\"ingredient-button\">\r\n              <button onClick={handleAddClick} className=\"add\">\r\n                &#10005;\r\n              </button>\r\n            </div>\r\n          )}\r\n          {inputList.length !== 1 && (\r\n            <button\r\n              onClick={() => handleRemoveClick(i)}\r\n              className=\"ingredient-button delete\"\r\n            >\r\n              &#10005;\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n};\r\nexport default IngredientInput;\r\n","import { useState, useEffect } from \"react\";\r\nimport IngredientInput from \"../ingredient-input/ingredient-input.component.js\";\r\n\r\nconst OddBits = ({ setOddBits, oddBits }) => {\r\n  const [inputList, setInputList] = useState(\r\n    oddBits.map((item) => ({ ingredient: item, ingredientRef: null }))\r\n  );\r\n\r\n  useEffect(() => {\r\n    let ingredients = inputList.map((input, i) => {\r\n      return input.ingredient;\r\n    });\r\n    setOddBits(ingredients);\r\n  }, [inputList]);\r\n\r\n  return (\r\n    <article className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h2 className=\"card-title\">Odd Bits</h2>\r\n      </div>\r\n      <div className=\"card-body \">\r\n        <IngredientInput\r\n          inputList={inputList}\r\n          setInputList={setInputList}\r\n          label=\"Odd bit\"\r\n        />\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default OddBits;\r\n","import React from \"react\";\r\n\r\nimport \"./custom-button.styles.scss\";\r\n\r\nconst CustomButton = (props) => {\r\n  const { onClick, value, children } = props;\r\n  return (\r\n    <button className=\"custom-button\" onClick={onClick} value={value}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\nexport default CustomButton;\r\n","import React from \"react\";\r\n\r\nimport \"./ingredient-list.styles.scss\";\r\n\r\nconst IngredientList = ({\r\n  recipeId,\r\n  ingredients,\r\n  pathname,\r\n  ingredientButton,\r\n}) => {\r\n  return ingredients ? (\r\n    <div className=\"ingredient-list\">\r\n      {ingredients.map((ingredient, i) => {\r\n        return (\r\n          <div className=\"ingredient\" key={recipeId + ingredient + i}>\r\n            <div htmlFor={ingredient} className=\"ingredient-text\">\r\n              {ingredient}\r\n            </div>\r\n            {pathname === \"/\" ? (\r\n              <button\r\n                className=\"ingredient-button\"\r\n                onClick={ingredientButton}\r\n                name={recipeId + \" \" + ingredient + \" \" + i}\r\n                value={ingredient + i}\r\n              >\r\n                &#10005;\r\n              </button>\r\n            ) : (\r\n              <div></div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default IngredientList;\r\n","import React from \"react\";\r\nimport IngredientList from \"../ingredient-list/ingredient-list.component\";\r\nimport \"./card.styles.scss\";\r\n\r\nfunction Card({\r\n  recipe,\r\n  button,\r\n  ingredientButton,\r\n  removeFromRecipes,\r\n  editRecipe,\r\n}) {\r\n  const pathname = window.location.pathname;\r\n\r\n  return (\r\n    <article className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h2 className=\"card-title\">{recipe.name}</h2>\r\n        {!recipe.link ? null : (\r\n          <a\r\n            className=\"title-link\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href={recipe.link}\r\n          >\r\n            Link\r\n          </a>\r\n        )}\r\n        <div className=\"card-header-buttons\">\r\n          {pathname === \"/recipes\" ? (\r\n            <button\r\n              value={recipe.id}\r\n              onClick={editRecipe}\r\n              className=\"title-link\"\r\n            >\r\n              Edit\r\n            </button>\r\n          ) : null}\r\n          <button\r\n            href=\"#\"\r\n            value={recipe.id}\r\n            onClick={(e) => removeFromRecipes(e)}\r\n            className=\" title-link\"\r\n          >\r\n            &#10005;\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {recipe.ingredients.length ? (\r\n        <div className=\"card-body\">\r\n          <IngredientList\r\n            recipeId={recipe.id}\r\n            ingredients={recipe.ingredients}\r\n            pathname={pathname}\r\n            ingredientButton={ingredientButton}\r\n          />\r\n\r\n          <button className=\"card-button\" onClick={button} value={recipe.id}>\r\n            {pathname === \"/\" ? \"Done\" : \"Add to Shopping List\"}\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"../../components/card/card.component.jsx\";\r\nimport Masonry from \"react-masonry-css\";\r\n\r\nimport \"./card-list.styles.scss\";\r\n\r\nfunction CardList({\r\n  recipes,\r\n  removeFromRecipes,\r\n  cardButton,\r\n  editRecipeCardButton,\r\n  ingredientButton,\r\n}) {\r\n  const numOfColumns = () => {\r\n    if (recipes.length < 3) {\r\n      return recipes.length;\r\n    } else {\r\n      return 3;\r\n    }\r\n  };\r\n\r\n  const breakpointColumnsObj = {\r\n    default: numOfColumns(),\r\n    1400: 2,\r\n    1000: 1,\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-list fade-in\">\r\n      <Masonry\r\n        breakpointCols={breakpointColumnsObj}\r\n        className=\"masonry-grid\"\r\n        columnClassName=\"masonry-grid_column\"\r\n      >\r\n        {recipes.map((recipe) => {\r\n          return (\r\n            <Card\r\n              removeFromRecipes={removeFromRecipes}\r\n              recipe={recipe}\r\n              key={recipe.id}\r\n              button={cardButton}\r\n              editRecipe={editRecipeCardButton}\r\n              ingredientButton={ingredientButton}\r\n            />\r\n          );\r\n        })}\r\n      </Masonry>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  shoppingListAdded,\r\n  shoppingListRemoved,\r\n  shoppingIngredientRemoved,\r\n} from \"./shopping-listSlice\";\r\nimport OddBits from \"../../components/oddbits/oddbits.component.jsx\";\r\nimport CustomButton from \"../../components/custom-button/custom-button.component.jsx\";\r\nimport CardList from \"../../components/cardList/card-list.component.jsx\";\r\n\r\nfunction Home() {\r\n  const recipes = useSelector((state) => state.shoppingList);\r\n  const dispatch = useDispatch();\r\n  const [oddBits, setOddBits] = useState(\r\n    JSON.parse(localStorage.getItem(\"storedOdd\")) || [\"\"]\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storedOdd\", JSON.stringify(oddBits));\r\n  }, [oddBits]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storedShopping\", JSON.stringify(recipes));\r\n  }, [recipes]);\r\n\r\n  const recipeNames = recipes.map((recipe) => {\r\n    return recipe.name;\r\n  });\r\n\r\n  const removeRecipeFromShoppingList = (event) => {\r\n    event.preventDefault();\r\n    let recipe = recipes.find((recipe) => recipe.id === event.target.value);\r\n    dispatch(shoppingListRemoved(recipe.id));\r\n  };\r\n\r\n  const removeIngredientFromShoppingList = (event) => {\r\n    event.preventDefault();\r\n    let { name } = event.target;\r\n    dispatch(shoppingIngredientRemoved(name));\r\n  };\r\n\r\n  const sortShopping = (event) => {\r\n    event.preventDefault();\r\n    let ingredientList = recipes\r\n      .map((recipe, i) => {\r\n        return recipe.ingredients;\r\n      })\r\n      .flat()\r\n      .sort();\r\n    let unique = [...new Set(ingredientList)];\r\n    let duplicates = unique.map((value) => [\r\n      value,\r\n      ingredientList.filter((str) => str === value).length,\r\n    ]);\r\n    let formatted = duplicates.map((ingredient, i) => [\r\n      ingredient[0] + \"  X\" + ingredient[1],\r\n    ]);\r\n\r\n    let temp = {\r\n      id: \"sort\",\r\n      name: \"Shopping List\",\r\n      ingredients: formatted,\r\n      link: \"\",\r\n    };\r\n    dispatch(shoppingListAdded(temp));\r\n  };\r\n\r\n  return (\r\n    <div className=\"page fade-in\">\r\n      <div className=\"page-header\">\r\n        <h2 className=\"title\">Shopping List</h2>\r\n        {recipeNames.includes(\"Shopping List\") ||\r\n        recipes.length === 0 ? null : (\r\n          <CustomButton value=\"AddRecipe\" onClick={sortShopping}>\r\n            Sort shopping list\r\n          </CustomButton>\r\n        )}\r\n        <OddBits setOddBits={setOddBits} oddBits={oddBits} />\r\n      </div>\r\n      {recipes.length === 0 ? (\r\n        <div className=\"recipes-empty\">\r\n          <h2>No recipes in your shopping list.</h2>\r\n          <h2>Go to Recipes to add some!</h2>\r\n        </div>\r\n      ) : (\r\n        <CardList\r\n          recipes={recipes}\r\n          removeFromRecipes={removeRecipeFromShoppingList}\r\n          cardButton={removeRecipeFromShoppingList}\r\n          ingredientButton={removeIngredientFromShoppingList}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { store } from \"react-notifications-component\";\r\n\r\nexport const notification = (title, msg) => {\r\n  store.addNotification({\r\n    title: title,\r\n    message: msg,\r\n    type: \"success\",\r\n    insert: \"bottom\",\r\n    container: \"bottom-center\",\r\n    dismiss: {\r\n      duration: 2000,\r\n    },\r\n  });\r\n};\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = JSON.parse(localStorage.getItem(\"storedRecipes\")) || [];\r\n\r\nconst recipeSlice = createSlice({\r\n  name: \"recipes\",\r\n  initialState,\r\n  reducers: {\r\n    recipeAdded: (recipes, action) => {\r\n      recipes.push(action.payload);\r\n    },\r\n    recipeRemoved: (recipes, action) => {\r\n      return recipes.filter((recipe) => recipe.id !== action.payload);\r\n    },\r\n    recipeEdited: (recipes, action) => {\r\n      return recipes.map((recipe) => {\r\n        if (recipe.id === action.payload.id) {\r\n          return action.payload;\r\n        } else {\r\n          return recipe;\r\n        }\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = recipeSlice;\r\n\r\nexport const { recipeAdded, recipeRemoved, recipeEdited } = actions;\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\n\r\nimport \"./custom-input-styles.scss\";\r\n\r\nconst CustomInput = (props) => {\r\n  const { handleChange, label, ...otherProps } = props;\r\n  return (\r\n    <div className=\"group\">\r\n      <input onChange={handleChange} {...otherProps} className=\"form-input\" />\r\n      {label ? (\r\n        <label\r\n          className={`${\r\n            otherProps.value.length ? \"shrink\" : \"\"\r\n          } form-input-label`}\r\n        >\r\n          {label}\r\n        </label>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n","import React from \"react\";\r\nimport CustomInput from \"../custom-input/custom-input.component\";\r\n\r\nimport \"./searchbox.styles.scss\";\r\n\r\nconst SearchBox = ({ searchField, searchChange }) => {\r\n  return (\r\n    <div className=\"searchbox\">\r\n      <CustomInput\r\n        type=\"search\"\r\n        label=\"Search Recipes\"\r\n        onChange={searchChange}\r\n        value={searchField}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { notification } from \"../../App/app.utils\";\r\n\r\nimport { recipeEdited, recipeRemoved } from \"./recipesSlice\";\r\nimport { shoppingListAdded } from \"../home/shopping-listSlice\";\r\n\r\nimport CardList from \"../../components/cardList/card-list.component\";\r\nimport SearchBox from \"../../components/search-box/searchbox.component.js\";\r\nimport CustomButton from \"../../components/custom-button/custom-button.component.jsx\";\r\nimport IngredientInput from \"../../components/ingredient-input/ingredient-input.component.js\";\r\nimport CustomInput from \"../../components/custom-input/custom-input.component\";\r\n\r\nconst Recipes = () => {\r\n  const [editingRecipe, setEditingRecipe] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    link: \"\",\r\n    ingredients: [],\r\n  });\r\n  const [inputList, setInputList] = useState([\r\n    {\r\n      ingredient: \"\",\r\n      ingredientRef: null,\r\n    },\r\n  ]);\r\n  const [searchField, setSearchField] = useState(\"\");\r\n\r\n  const recipes = useSelector((state) => state.recipes);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"storedRecipes\", JSON.stringify(recipes));\r\n  }, [recipes]);\r\n\r\n  const onSearchChange = (event) => {\r\n    setSearchField(event.target.value);\r\n  };\r\n\r\n  const inputEditChangeHandler = (event) => {\r\n    setEditingRecipe((prevState) => ({\r\n      ...prevState,\r\n      [event.target.name]: event.target.value,\r\n    }));\r\n  };\r\n\r\n  const filteredRecipes = recipes.filter((recipe) => {\r\n    return recipe.name.toLowerCase().includes(searchField.toLowerCase());\r\n  });\r\n\r\n  const addToShoppingList = (event) => {\r\n    event.preventDefault();\r\n    let { value } = event.target;\r\n    recipes.find((recipe) => {\r\n      if (recipe.id === value) {\r\n        dispatch(shoppingListAdded(recipe));\r\n        notification(recipe.name, \"Added to your shopping list\");\r\n      }\r\n    });\r\n    setSearchField(\"\");\r\n  };\r\n\r\n  const removeFromRecipes = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      window.confirm(\"Are you sure you want to permanently delete this recipe?\")\r\n    ) {\r\n      let id = event.target.value.split(\" \")[0];\r\n      dispatch(recipeRemoved(id));\r\n      setSearchField(\"\");\r\n    }\r\n  };\r\n\r\n  const editRecipeCardButton = (event) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    let recipeToEdit = recipes.find((item) => item.id === event.target.value);\r\n    setEditingRecipe(recipeToEdit);\r\n  };\r\n\r\n  const editRecipeDone = (event) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    dispatch(recipeEdited(editingRecipe));\r\n    notification(editingRecipe.name, \"edited\");\r\n    setEditingRecipe({\r\n      id: \"\",\r\n      name: \"\",\r\n      link: \"\",\r\n      ingredients: [],\r\n    });\r\n    setInputList([\r\n      {\r\n        ingredient: \"\",\r\n        ingredientRef: null,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setEditingRecipe((prevState) => ({\r\n      ...prevState,\r\n      ingredients: inputList\r\n        .map((item) => {\r\n          return item.ingredient;\r\n        })\r\n        .filter(Boolean),\r\n    }));\r\n  }, [inputList]);\r\n\r\n  useEffect(() => {\r\n    let defaultState = [];\r\n    if (editingRecipe.id !== \"\") {\r\n      defaultState = editingRecipe.ingredients.map((ingredient) => {\r\n        return { ingredient: ingredient, ingredientRef: null };\r\n      });\r\n    } else {\r\n      return (defaultState = [\r\n        {\r\n          ingredient: \"\",\r\n          ingredientRef: null,\r\n        },\r\n      ]);\r\n    }\r\n    setInputList(defaultState);\r\n  }, [editingRecipe.ingredients.length]);\r\n\r\n  return (\r\n    <div className=\"page fade-in\">\r\n      <div className=\"page-header\">\r\n        <h2 className=\"title\">Recipe List</h2>\r\n        {editingRecipe.id === \"\" ? null : (\r\n          <article className=\"card\">\r\n            <h2>Edit Recipe</h2>\r\n\r\n            <div className=\"card-body\">\r\n              <CustomInput\r\n                name=\"name\"\r\n                label=\"Recipe Name\"\r\n                handleChange={inputEditChangeHandler}\r\n                value={editingRecipe.name}\r\n                autoComplete=\"off\"\r\n              />\r\n              <CustomInput\r\n                name=\"link\"\r\n                label=\"Link\"\r\n                handleChange={inputEditChangeHandler}\r\n                value={editingRecipe.link}\r\n                autoComplete=\"off\"\r\n              />\r\n              <IngredientInput\r\n                inputList={inputList}\r\n                setInputList={setInputList}\r\n              />\r\n            </div>\r\n\r\n            <CustomButton value=\"editRecipe\" onClick={editRecipeDone}>\r\n              Done\r\n            </CustomButton>\r\n          </article>\r\n        )}\r\n\r\n        <SearchBox searchChange={onSearchChange} searchField={searchField} />\r\n      </div>\r\n      {filteredRecipes.length ? (\r\n        <CardList\r\n          recipes={filteredRecipes}\r\n          removeFromRecipes={removeFromRecipes}\r\n          cardButton={addToShoppingList}\r\n          editRecipeCardButton={editRecipeCardButton}\r\n        />\r\n      ) : searchField.length ? (\r\n        <h2 className=\"title\">Recipe not found.</h2>\r\n      ) : (\r\n        <div className=\"recipes-empty\">\r\n          <h2>No recipes in your recipe list.</h2>\r\n          <h2>Go to Add a recipe to add some!</h2>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { notification } from \"../../App/app.utils\";\r\nimport { recipeAdded } from \"../recipes/recipesSlice\";\r\nimport CustomButton from \"../../components/custom-button/custom-button.component.jsx\";\r\nimport IngredientInput from \"../../components/ingredient-input/ingredient-input.component.js\";\r\nimport CustomInput from \"../../components/custom-input/custom-input.component\";\r\n\r\nconst ID = () => {\r\n  return Math.random().toString(36).substr(2, 9);\r\n};\r\n\r\nfunction NewRecipe() {\r\n  const [inputList, setInputList] = useState([\r\n    { ingredient: \"\", ingredientRef: null },\r\n  ]);\r\n  const [newRecipe, setNewRecipe] = useState({\r\n    id: ID(),\r\n    name: \"\",\r\n    link: \"\",\r\n    ingredients: [],\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setNewRecipe({ ...newRecipe, [name]: value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let ingredients = inputList\r\n      .map((input, i) => {\r\n        return input.ingredient.toLowerCase();\r\n      })\r\n      .filter(Boolean);\r\n    setNewRecipe({ ...newRecipe, ingredients: ingredients });\r\n  }, [inputList]);\r\n\r\n  const addRecipe = (event) => {\r\n    event.preventDefault();\r\n    dispatch(recipeAdded(newRecipe));\r\n    notification(newRecipe.name, \"Added to Recipes\");\r\n    setNewRecipe({ id: ID(), name: \"\", link: \"\", ingredients: [] });\r\n    setInputList([{ ingredient: \"\", ingredientRef: null }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"page fade-in\">\r\n      <div className=\"page-header\">\r\n        <h2 className=\"title\">New Recipe</h2>\r\n\r\n        <div className=\"card\">\r\n          <h3>Add a new recipe here</h3>\r\n          <CustomInput\r\n            name=\"name\"\r\n            label=\"Recipe Name\"\r\n            handleChange={handleChange}\r\n            value={newRecipe.name}\r\n          />\r\n          <CustomInput\r\n            name=\"link\"\r\n            label=\"Link\"\r\n            handleChange={handleChange}\r\n            value={newRecipe.link}\r\n            autoComplete=\"off\"\r\n          />\r\n          <IngredientInput inputList={inputList} setInputList={setInputList} />\r\n          <CustomButton value=\"AddRecipe\" onClick={addRecipe}>\r\n            Add Recipe\r\n          </CustomButton>\r\n        </div>\r\n\r\n        <div className=\"center ph1 tc w-50-ns w-90\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewRecipe;\r\n","import { Footer } from \"./components/footer/footer.jsx\";\r\nimport React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Home from \"./pages/home/home.component.js\";\r\nimport Recipes from \"./pages/recipes/recipes.component.js\";\r\nimport NewRecipe from \"./pages/new-recipe/new-recipe.component.js\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\n\r\nimport \"./App.scss\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"app fade-in\">\r\n      <ReactNotification />\r\n      <Router>\r\n        <header className=\"app-header\">\r\n          <nav className=\"nav\">\r\n            <Link className=\"nav-link\" to=\"/\">\r\n              Shopping list\r\n            </Link>\r\n            <Link className=\"nav-link\" to=\"/recipes\">\r\n              Recipes\r\n            </Link>\r\n            <Link className=\"nav-link\" to=\"/newrecipe\">\r\n              Add a recipe\r\n            </Link>\r\n          </nav>\r\n        </header>\r\n        <div className=\"body\">\r\n          <Switch>\r\n            <Route path=\"/recipes\">\r\n              <Recipes />\r\n            </Route>\r\n            <Route path=\"/newrecipe\">\r\n              <NewRecipe />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Home />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport recipesReducer from \"../pages/recipes/recipesSlice\";\r\nimport shoppingListReducer from \"../pages/home/shopping-listSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    recipes: recipesReducer,\r\n    shoppingList: shoppingListReducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./App/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport { register } from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nregister();\r\n"],"sourceRoot":""}